// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Infrastructure.Persistence;

#nullable disable

namespace OnlineShop.Infrastructure.Migrations
{
    [DbContext(typeof(OnlineShopDBContext))]
    [Migration("20241104050753_InitialCreateProduct")]
    partial class InitialCreateProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductAttrs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDesc")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte>("ProductStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CreateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7806),
                            IsDeleted = false,
                            ProductAttrs = "{\"brand\": \"Apple\", \"model\": \"iPhone 12\"}",
                            ProductDesc = "Apple iPhone 12 with advanced features",
                            ProductName = "iPhone 12",
                            ProductStatus = (byte)1,
                            Sort = 1,
                            UpdateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7806)
                        });
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Sku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkuDescription")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SkuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SkuNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<decimal>("SkuPrice")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("SkuStock")
                        .HasColumnType("int");

                    b.Property<byte>("SkuType")
                        .HasColumnType("tinyint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Skus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7905),
                            ProductId = 1L,
                            SkuDescription = "iPhone 12 with 64GB storage, Black color",
                            SkuName = "iPhone 12 64GB Black",
                            SkuNo = "IP12-64-BLACK",
                            SkuPrice = 799.99m,
                            SkuStock = 50,
                            SkuType = (byte)0,
                            Sort = 1,
                            Status = (byte)1,
                            UpdateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7905)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7908),
                            ProductId = 1L,
                            SkuDescription = "iPhone 12 with 128GB storage, White color",
                            SkuName = "iPhone 12 128GB White",
                            SkuNo = "IP12-128-WHITE",
                            SkuPrice = 849.99m,
                            SkuStock = 30,
                            SkuType = (byte)1,
                            Sort = 2,
                            Status = (byte)1,
                            UpdateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7908)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7911),
                            ProductId = 1L,
                            SkuDescription = "iPhone 12 with 256GB storage, Blue color",
                            SkuName = "iPhone 12 256GB Blue",
                            SkuNo = "IP12-256-BLUE",
                            SkuPrice = 949.99m,
                            SkuStock = 20,
                            SkuType = (byte)2,
                            Sort = 3,
                            Status = (byte)1,
                            UpdateTime = new DateTime(2024, 11, 4, 12, 7, 53, 810, DateTimeKind.Local).AddTicks(7911)
                        });
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Sku", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Product", "Product")
                        .WithMany("Skus")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product", b =>
                {
                    b.Navigation("Skus");
                });
#pragma warning restore 612, 618
        }
    }
}
