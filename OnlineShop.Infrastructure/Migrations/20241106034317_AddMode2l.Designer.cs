// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Infrastructure.Persistence;

#nullable disable

namespace OnlineShop.Infrastructure.Migrations
{
    [DbContext(typeof(OnlineShopDBContext))]
    [Migration("20241106034317_AddMode2l")]
    partial class AddMode2l
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OnlineShop.Domain.Entities.About", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AId");

                    b.ToTable("Abouts");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Attribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttributeId"), 1L, 1);

                    b.Property<int>("AttributeGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AttributeId");

                    b.HasIndex("AttributeGroupId");

                    b.ToTable("Attribute");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.AttributeGroup", b =>
                {
                    b.Property<int>("AttributeGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttributeGroupId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AttributeGroupId");

                    b.ToTable("AttributeGroup");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.AttributeValue", b =>
                {
                    b.Property<int>("AttributeValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttributeValueId"), 1L, 1);

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AttributeValueId");

                    b.HasIndex("AttributeId");

                    b.ToTable("AttributeValue");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.CategoryAttribute", b =>
                {
                    b.Property<int>("CategoryAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryAttributeId"), 1L, 1);

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryAttributeId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryAttribute");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("CommentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<long?>("ProductId1")
                        .HasColumnType("bigint");

                    b.HasKey("CommentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId1");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Createdby")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedbyNavigationAdminId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewsgroupId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsId");

                    b.HasIndex("CreatedbyNavigationAdminId");

                    b.HasIndex("NewsgroupId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.NewsGroup", b =>
                {
                    b.Property<int>("NewsgroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsgroupId"), 1L, 1);

                    b.Property<string>("NewsgroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsgroupId");

                    b.ToTable("NewsGroups");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("AddressReceiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("NameReceiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneReceiver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderdetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderdetailId"), 1L, 1);

                    b.Property<double?>("ListPrice")
                        .HasColumnType("float");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityOrder")
                        .HasColumnType("int");

                    b.Property<int>("SkuID")
                        .HasColumnType("int");

                    b.HasKey("OrderdetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SkuID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasMaxLength(64)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ProductStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GroupId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.ProductAttribute", b =>
                {
                    b.Property<int>("ProductAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductAttributeId"), 1L, 1);

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("AttributeValueId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<long>("ProductId1")
                        .HasColumnType("bigint");

                    b.Property<int?>("SkuId")
                        .HasColumnType("int");

                    b.HasKey("ProductAttributeId");

                    b.HasIndex("AttributeId");

                    b.HasIndex("AttributeValueId");

                    b.HasIndex("ProductId1");

                    b.HasIndex("SkuId");

                    b.ToTable("ProductAttribute");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Sku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PromotionalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SkuDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkuNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkuStock")
                        .HasColumnType("int");

                    b.Property<byte>("SkuType")
                        .HasColumnType("tinyint");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Skus");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.SkuImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("SkuId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkuId");

                    b.ToTable("SkuImages");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AttributeValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SkuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkuId");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Warranty", b =>
                {
                    b.Property<int>("WarrantyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarrantyId"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ImageProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageProductAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderdetailId")
                        .HasColumnType("int");

                    b.Property<string>("ProductStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductStatusAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SkuID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WarrantyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarrantyDateAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarrantyQuantity")
                        .HasColumnType("int");

                    b.Property<string>("WarrantyStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarrantyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderdetailId");

                    b.HasIndex("SkuID");

                    b.ToTable("Warranties");
                });

            modelBuilder.Entity("PRN231_API.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"), 1L, 1);

                    b.Property<string>("ContactContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContactDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Attribute", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.AttributeGroup", "AttributeGroup")
                        .WithMany("Attributes")
                        .HasForeignKey("AttributeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeGroup");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.AttributeValue", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Attribute", "Attribute")
                        .WithMany("AttributeValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.CategoryAttribute", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Attribute", "Attribute")
                        .WithMany("CategoryAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Domain.Entities.Category", "Category")
                        .WithMany("CategoryAttributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Comment", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Customer", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId");

                    b.HasOne("OnlineShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.News", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Admin", "CreatedbyNavigation")
                        .WithMany("News")
                        .HasForeignKey("CreatedbyNavigationAdminId");

                    b.HasOne("OnlineShop.Domain.Entities.NewsGroup", "Newsgroup")
                        .WithMany("News")
                        .HasForeignKey("NewsgroupId");

                    b.Navigation("CreatedbyNavigation");

                    b.Navigation("Newsgroup");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Order", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Domain.Entities.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId");

                    b.HasOne("OnlineShop.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("OnlineShop.Domain.Entities.Group", "Group")
                        .WithMany("Products")
                        .HasForeignKey("GroupId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.ProductAttribute", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Attribute", "Attribute")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Domain.Entities.AttributeValue", "AttributeValue")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("AttributeValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Domain.Entities.Sku", null)
                        .WithMany("ProductAttributes")
                        .HasForeignKey("SkuId");

                    b.Navigation("Attribute");

                    b.Navigation("AttributeValue");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Sku", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Product", null)
                        .WithMany("Skus")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.SkuImage", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Sku", "Sku")
                        .WithMany("Images")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Variant", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Sku", "Sku")
                        .WithMany("Variants")
                        .HasForeignKey("SkuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Warranty", b =>
                {
                    b.HasOne("OnlineShop.Domain.Entities.Customer", "Customer")
                        .WithMany("Warranties")
                        .HasForeignKey("CustomerId");

                    b.HasOne("OnlineShop.Domain.Entities.OrderDetail", "Orderdetail")
                        .WithMany("Warranties")
                        .HasForeignKey("OrderdetailId");

                    b.HasOne("OnlineShop.Domain.Entities.Sku", "Sku")
                        .WithMany()
                        .HasForeignKey("SkuID");

                    b.Navigation("Customer");

                    b.Navigation("Orderdetail");

                    b.Navigation("Sku");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Admin", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Attribute", b =>
                {
                    b.Navigation("AttributeValues");

                    b.Navigation("CategoryAttributes");

                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.AttributeGroup", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.AttributeValue", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Category", b =>
                {
                    b.Navigation("CategoryAttributes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Orders");

                    b.Navigation("Warranties");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Group", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.NewsGroup", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.OrderDetail", b =>
                {
                    b.Navigation("Warranties");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Product", b =>
                {
                    b.Navigation("Skus");
                });

            modelBuilder.Entity("OnlineShop.Domain.Entities.Sku", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("ProductAttributes");

                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
